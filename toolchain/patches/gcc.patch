diff --git a/gcc/config/seraph.h b/gcc/config/seraph.h
new file mode 100644
index 0000000..578bfba
--- /dev/null
+++ b/gcc/config/seraph.h
@@ -0,0 +1,39 @@
+/* Changing from default /usr/lib/ */
+#undef STANDARD_STARTFILE_PREFIX
+#define STANDARD_STARTFILE_PREFIX "/lib/"
+
+/* Useful if you wish to make target-specific GCC changes. */
+#undef TARGET_SERAPH
+#define TARGET_SERAPH 1
+ 
+/* Default arguments you want when running your
+   i686-myos-gcc/x86_64-myos-gcc toolchain */
+#undef LIB_SPEC
+#define LIB_SPEC "-lc" /* link against C standard library */
+ 
+#undef LINK_SPEC
+#define LINK_SPEC "%{shared:-shared} %{static:-static} %{!shared: %{!static: %{rdynamic:-export-dynamic} %{!dynamic-linker:-dynamic-linker /lib/ld.so}}}"
+
+/* Files that are linked before user code.
+   The %s tells GCC to look for these files in the library directory. */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "%{!shared: %{!pg:crt0.o%s}} crti.o%s %{!shared:crtbegin.o%s}"
+ 
+/* Files that are linked after user code. */
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "%{!shared:crtend.o%s} crtn.o%s"
+ 
+/* Don't automatically add extern "C" { } around header files. */
+#undef  NO_IMPLICIT_EXTERN_C
+#define NO_IMPLICIT_EXTERN_C 1
+ 
+/* Additional predefined macros. */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()      \
+  do {                                \
+    builtin_define ("__seraph__");      \
+    builtin_define ("__unix__");      \
+    builtin_assert ("system=seraph");   \
+    builtin_assert ("system=unix");   \
+    builtin_assert ("system=posix"); \
+  } while(0);
diff --git a/config.sub b/config.sub
index f2632cd..ca6e387 100755
--- a/config.sub
+++ b/config.sub
@@ -1416,7 +1416,7 @@ case $os in
 	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
 	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \
-	      | -onefs* | -tirtos* | -phoenix* | -fuchsia* | -redox* | -bme*)
+	      | -onefs* | -tirtos* | -phoenix* | -fuchsia* | -redox* | -bme* | -seraph*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	-qnx*)
diff --git a/fixincludes/mkfixinc.sh b/fixincludes/mkfixinc.sh
index 0f96486..e1ea903 100755
--- a/fixincludes/mkfixinc.sh
+++ b/fixincludes/mkfixinc.sh
@@ -11,6 +11,7 @@ target=fixinc.sh
 
 # Check for special fix rules for particular targets
 case $machine in
+    *-seraph* | \
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 7af8e02..1990a9f 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -646,6 +646,15 @@ x86_cpus="generic intel"
 
 # Common parts for widely ported systems.
 case ${target} in
+*-*-seraph*)
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=wrap
+  native_system_header_dir=/include
+  tmake_file="${tmake_file} t-slibgcc"
+  #thread_file='posix'
+  ;;
 *-*-darwin*)
   tmake_file="t-darwin ${cpu_type}/t-darwin"
   tm_file="${tm_file} darwin.h"
@@ -938,6 +945,9 @@ case ${target} in
 esac
 
 case ${target} in
+i[3-7]86-*-seraph*)
+  tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h glibc-stdint.h i386/i386elf.h seraph.h"
+  ;;
 aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
 	tm_file="${tm_file} dbxelf.h elfos.h newlib-stdint.h"
 	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-elf-raw.h"
diff --git a/libgcc/config.host b/libgcc/config.host
index 11b4aca..8279114 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -333,6 +333,10 @@ i[34567]86-*-cygwin* | x86_64-*-cygwin*)
 esac
 
 case ${host} in
+i[3-7]86-*-seraph*)
+	extra_parts="$extra_parts crtbegin.o crtend.o"
+    tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-libgcc-pic"
+    ;;
 aarch64*-*-elf | aarch64*-*-rtems*)
 	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
 	extra_parts="$extra_parts crtfastmath.o"
diff --git a/override.m4 b/override.m4
index b5ce654..d3e815b 100644
--- a/config/override.m4
+++ b/config/override.m4
@@ -29,7 +29,7 @@ m4_copy_force([_AC_PREREQ], [AC_PREREQ])
 
 dnl Ensure exactly this Autoconf version is used
 m4_ifndef([_GCC_AUTOCONF_VERSION],
-  [m4_define([_GCC_AUTOCONF_VERSION], [2.64])])
+  [m4_define([_GCC_AUTOCONF_VERSION], [2.69])])
 
 dnl Test for the exact version when AC_INIT is expanded.
 dnl This allows to update the tree in steps (for testing)
diff --git a/crossconfig.m4 b/crossconfig.m4
index cb6e3af..e1f5689 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -5,6 +5,12 @@ dnl
 AC_DEFUN([GLIBCXX_CROSSCONFIG],[
 # Base decisions on target environment.
 case "${host}" in
+  *-seraph*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
   arm*-*-symbianelf*)
     # This is a freestanding configuration; there is nothing to do here.
     ;;diff --git a/configure b/configure
index 5535bfa..6cc3d02 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -78305,7 +78305,7 @@ done
 
     ;;
   *)
-    as_fn_error "No support for this host/target combination." "$LINENO" 5
+    #as_fn_error "No support for this host/target combination." "$LINENO" 5
    ;;
 esac

index 3ff6b14..11ee3e5 100644
--- a/libstdc++-v3/include/bits/hashtable_policy.h
+++ b/libstdc++-v3/include/bits/hashtable_policy.h
@@ -512,7 +512,7 @@ namespace __detail
 #if __SIZEOF_SIZE_T__ >= 8
     std::uint_fast64_t __x = __n;
 #else
-    std::uint_fast32_t __x = __n;
+    uint_fast32_t __x = __n;
 #endif
     // Algorithm from Hacker's Delight, Figure 3-3.
     __x = __x - 1;
diff --git a/libtool.m4 b/libtool.m4
index 896676288..ace9a37a1 100644
--- a/libtool.m4
+++ b/libtool.m4
@@ -2494,6 +2494,15 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu)
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
+seraph*)
+  need_lib_prefix=no
+  #need_version=no
+  library_names_spec='$libname$shared_ext'
+  soname_spec='$libname$shared_ext'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
@@ -3093,6 +3103,10 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
+seraph*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
 netbsd*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_dediff --git a/aclocal.m4 b/aclocal.m4
